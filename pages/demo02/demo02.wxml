<!--pages/demo02/demo02.wxml-->
<!-- 
  selectable user-select: 长按全选文字
  decode: 解析特殊字符 (&nbsp, &lt...)
 -->
<!-- <view >
  <text user-select decode>
    哇哈哈 &nbsp; 123
  </text>
</view> -->

<!-- 
  image 图片标签
  1 src 指定要加载的图片的路径
    图片存在默认的宽度和高度 320 * 240      原图大小是 200 * 100
  2 mode 决定 图片内容 如何 和 图片标签 宽高 做适配 (mode = "...")
    1 scaleToFill 默认值 不保持纵横比缩放图片，使图片的宽高完全拉伸至填满 image 元素 
    2 aspectFit 保持宽高比 确保图片的长边 显示出来   页面轮播图 常用
    3 aspectFill 保持纵横比缩放图片，只保证图片的 短 边能完全显示出来。  少用
    4 widthFix 以前web的图片的 宽度指定了之后 高度 会自己按比例来调整   常用  
    5 bottom。。 类似以前的backgroud-position 
  3 小程序当中的图片 直接就支持 懒加载  lazy-load
    1 lazy-load 会自己判断 当 图片 出现在 视口  上下 三屏的高度 之内的时候  自己开始加载图片 
 -->
<!-- <image 
lazy-load 
src="https://tva2.sinaimg.cn/large/007DFXDhgy1g51jlzfb4lj305k02s0sp.jpg"
aspectFit
mode="bottom"
 /> -->

<!-- 
  1 轮播图外层容器 swiper
  2 每一个轮播项 swiper-item
  3 swiper标签 存在默认样式
    1 width 100%
    2 height 150px    image 存在默认宽度和高度 320 * 240 
    3 swiper 高度 无法实现由内容撑开 
  4 先找出来 原图的宽度和高度 等比例 给swiper 定 宽度和高度
    原图的宽度和高度  1125 * 352 px
    swiper 宽度 / swiper  高度 =  原图的宽度  /  原图的高度
    swiper  高度  =  swiper 宽度 *  原图的高度 / 原图的宽度
    height: 100vw * 352 /  1125
  5 autoplay 自动轮播
  6 interval 修改轮播时间
  7 circular 衔接轮播
  8 indicator-dots 显示 指示器 分页器 索引器 
  9 indicator-color 指示器的未选择的颜色 
  10 indicator-active-color 选中的时候的指示器的颜色 
-->
<!-- <swiper 
autoplay 
interval="2000" 
circular 
indicator-dots 
indicator-color="rgba(0, 0, 0, 0.2)"
indicator-active-color="skyblue"
>
  <swiper-item >
    <image 
    src="//gw.alicdn.com/imgextra/i1/44/O1CN013zKZP11CCByG5bAeF_!!44-0-lubanu.jpg"
    mode="widthFix"
    />
  </swiper-item>
  <swiper-item>
    <image 
    src="//aecpm.alicdn.com/simba/img/TB1CWf9KpXXXXbuXpXXSutbFXXX.jpg_q50.jpg" 
    mode="widthFix"
    />
  </swiper-item>
  <swiper-item >
    <image 
    src="//gw.alicdn.com/imgextra/i2/37/O1CN01syHZxs1C8zCFJj97b_!!37-0-lubanu.jpg" 
    mode="widthFix"
    />
  </swiper-item>
</swiper> -->

<!-- 
  navigator: 
  导航组件 navigator
  0 块级元素 默认会换行  可以直接加宽度和高度 
  1 url 要跳转的页面路径  绝对路径 相对路径
  2 target 要跳转到当前的小程序 还是其他的小程序的页面
    self 默认值 自己 小程序的页面 
    miniProgram 其他的小程序的页面
  3 open-type 跳转的方式
    1 navigate 默认值 	保留当前页面，跳转到应用内的某个页面，但是不能跳到 tabbar 页面
    2 redirect	关闭当前页面，跳转到应用内的某个页面，但是不允许跳转到 tabbar 页面。
    3 switchTab	跳转到 tabBar 页面，并关闭其他所有非 tabBar 页面
    4 reLaunch	关闭所有页面，打开到应用内的某个页面
 -->
<!-- <navigator url="/pages/index/index">index界面</navigator>
<navigator url="/pages/demo01/demo01">demo01</navigator>
<navigator open-type="switchTab" url="/pages/cart/cart">
  重定向到购物车
</navigator> -->
<!-- <navigator open-type="redirect" url="/pages/cart/cart">
  重定向到购物车
</navigator> -->
<!-- <navigator open-type="reLaunch" url="/pages/cart/cart">
  重定向到购物车
</navigator> -->

<!-- 
  button标签
  属性:
 -->
 <!-- size：控制按钮大小 -->
 <!-- <button size="default">普通按钮</button>
 <button size="mini">小按钮</button> -->
 <!-- type: 控制按钮类型 -->
 <!-- <button type="default">default</button>
 <button type="primary">primary</button>
 <button type="warn">warn</button> -->
 <!-- plain： -->
 <!-- <button>按钮</button>
 <button plain>按钮</button> -->
 <!-- loading: -->
 <!-- <button loading>加载</button> -->

<!-- 
  button 开发能力
  open-type：
  1 contact 直接打开  客服对话功能  需要在微信小程序的后台配置   只能够通过真机调试来打开 
  2 share 转发当前的小程序 到微信朋友中   不能把小程序 分享到 朋友圈 
  3 getPhoneNumber 获取当前用户的手机号码信息 结合一个事件来使用  不是企业的小程序账号 没有权限来获取用户的手机号码 
    1 绑定一个事件 bindgetphonenumber 
    2 在事件的回调函数中  通过参数来获取信息 
    3 获取到的信息  已经加密过了 
      需要用户自己待见小程序的后台服务器，在后台服务器中进行解析 手机号码，返回到小程序中 就可以看到信息了
  4 getUserInfo 获取当前用户的个人信息
    1 使用方法 类似 获取用户的手机号码
    2 可以直接获取 不存在加密的字段 
  5 launchApp 在小程序当中 直接打开 app
    1 需要现在 app中 通过app的某个链接 打开 小程序
    2 在小程序 中 再通过 这个功能 重新打开 app
    3 找到 京东的app 和 京东的小程序  
  6 openSetting 打开小程序内置的 授权页面
    1 授权页面中 只会出现 用户曾经点击过的 权限 
  7 feedback 打开 小程序内置的 意见反馈页面 
    1 只能够通过真机调试来打开 
-->
<!-- 
  <button open-type="contact">contact (需要真机测试)</button>
  <button open-type="share">share</button>
  <button open-type="getPhoneNumber" bindgetphonenumber="getPhoneNumber">
    getPhoneNumber (无权限)
  </button>
  <button open-type="getUserInfo" bindgetuserinfo="getUserInfo">
    getUserInfo
  </button>
  <button open-type="launchApp">launchApp</button>
  <button open-type="openSetting">openSetting</button>
  <button open-type="feedback">feedback (真机调试)</button>
-->

<!-- 
  小程序中的字体图标
  1 type 图标的类型
    success|success_no_circle|info|warn|waiting|cancel|download|search|clear
  2 size 大小 
  3 color 图标的颜色
 -->
<!-- <icon type="search" size="50" color="#0094ff"></icon> -->

<!-- 
  radio 单选框
  1 radio标签 必须要和 父元素 radio-group来使用
  2 value 选中的单选框的值 
  3 需要给 radio-group 绑定 change事件 
  4 需要在页面中显示 选中的值
 -->
<!-- <radio-group bindchange="handleChange">
  <radio color="skyblue" value="male">男</radio>
  <radio color="skyblue" value="female">女</radio>
</radio-group>

<view>你选择的性别为: {{gender}}</view> -->

<!-- 
  checkbox
 -->
<view>
  <checkbox-group bindchange="checkboxChange">
    <checkbox wx:for="{{list}}" value="{{item.value}}" wx:key="number">
      {{item.name}}
    </checkbox>
  </checkbox-group>
  <view>
    展示的物品有: {{showList}}
  </view>
</view>